version: '3.8'

services:
  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: pdf_gpt_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: pdf_gpt_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # PDF GPT Backend
  backend:
    build: .
    container_name: pdf_gpt_backend
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - FLASK_ENV=production
      - OLLAMA_HOST=http://ollama:11434
    depends_on:
      - ollama
      - redis
    restart: unless-stopped
    command: gunicorn --bind 0.0.0.0:5000 --workers 4 --threads 2 --timeout 120 backend.app:app

  # PDF GPT Frontend
  frontend:
    build: .
    container_name: pdf_gpt_frontend
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    depends_on:
      - backend
    restart: unless-stopped
    command: streamlit run frontend/app.py --server.port 8501 --server.address 0.0.0.0

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pdf_gpt_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  ollama_data:
  redis_data:
